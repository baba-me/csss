<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>